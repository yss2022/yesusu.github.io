import{_ as e,o as s,c as a,Q as l}from"./chunks/framework.01af844e.js";const f=JSON.parse('{"title":"CSS3 Flex 布局","description":"","frontmatter":{},"headers":[],"relativePath":"前端/css/flex.md","filePath":"前端/css/flex.md"}'),o={name:"前端/css/flex.md"},n=l(`<h1 id="css3-flex-布局" tabindex="-1">CSS3 Flex 布局 <a class="header-anchor" href="#css3-flex-布局" aria-label="Permalink to &quot;CSS3 Flex 布局&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>CSS3 引入了一种强大的布局模型，称为 Flexbox（弹性盒子布局），用于更容易地实现复杂的页面布局和对齐。Flex 布局是一个一维布局模型，允许您在一个方向上（水平或垂直）对元素进行排列和对齐，而不需要复杂的浮动和定位。</p><h2 id="基本概念" tabindex="-1">基本概念 <a class="header-anchor" href="#基本概念" aria-label="Permalink to &quot;基本概念&quot;">​</a></h2><ul><li><p><strong>Flex 容器</strong>：包含一个或多个子元素的父元素被称为 Flex 容器。通过设置容器的 <code>display</code> 属性为 <code>flex</code> 或 <code>inline-flex</code> 来定义一个 Flex 容器。</p></li><li><p><strong>Flex 项目</strong>：容器内的每个子元素称为 Flex 项目，它们相对于容器进行布局。</p></li></ul><h2 id="容器属性" tabindex="-1">容器属性 <a class="header-anchor" href="#容器属性" aria-label="Permalink to &quot;容器属性&quot;">​</a></h2><p>以下是一些用于控制 Flex 容器的属性：</p><ol><li><p><code>display</code>：定义容器是一个 Flex 容器还是一个行内 Flex 容器。可以设置为 <code>flex</code> 或 <code>inline-flex</code>。</p></li><li><p><code>flex-direction</code>：定义 Flex 项目在容器中的排列方向。可以设置为 <code>row</code>（水平排列）、<code>row-reverse</code>（反向水平排列）、<code>column</code>（垂直排列）、<code>column-reverse</code>（反向垂直排列）。</p></li><li><p><code>flex-wrap</code>：定义 Flex 项目在容器中是否换行。可以设置为 <code>nowrap</code>（不换行）、<code>wrap</code>（换行）、<code>wrap-reverse</code>（反向换行）。</p></li><li><p><code>justify-content</code>：定义 Flex 项目在主轴上的对齐方式。可以设置为 <code>flex-start</code>、<code>flex-end</code>、<code>center</code>、<code>space-between</code>、<code>space-around</code>。</p></li><li><p><code>align-items</code>：定义 Flex 项目在交叉轴上的对齐方式。可以设置为 <code>flex-start</code>、<code>flex-end</code>、<code>center</code>、<code>baseline</code>、<code>stretch</code>。</p></li><li><p><code>align-content</code>：定义多行 Flex 项目在交叉轴上的对齐方式。可以设置为 <code>flex-start</code>、<code>flex-end</code>、<code>center</code>、<code>space-between</code>、<code>space-around</code>、<code>stretch</code>。</p></li></ol><h2 id="项目属性" tabindex="-1">项目属性 <a class="header-anchor" href="#项目属性" aria-label="Permalink to &quot;项目属性&quot;">​</a></h2><p>以下是一些用于控制 Flex 项目的属性：</p><ol><li><p><code>order</code>：定义项目的排列顺序，可以为负值。</p></li><li><p><code>flex-grow</code>：定义项目在剩余空间中的放大比例。</p></li><li><p><code>flex-shrink</code>：定义项目在空间不足时的缩小比例。</p></li><li><p><code>flex-basis</code>：定义项目在分配空间之前的初始大小。</p></li><li><p><code>flex</code>：简写属性，包括 <code>flex-grow</code>、<code>flex-shrink</code>、<code>flex-basis</code>。</p></li><li><p><code>align-self</code>：定义项目在交叉轴上的对齐方式，覆盖容器的 <code>align-items</code> 属性。</p></li></ol><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><p>以下是一个简单的示例，展示了如何使用 Flex 布局：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.container</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">display</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">flex</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">flex-direction</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">row</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">justify-content</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">space-between</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">align-items</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">center</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">.item</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">flex</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.container</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">display</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">flex</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">flex-direction</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">row</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">justify-content</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">space-between</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">align-items</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">center</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">.item</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">flex</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,14),c=[n];function p(t,r,d,i,E,y){return s(),a("div",null,c)}const h=e(o,[["render",p]]);export{f as __pageData,h as default};
